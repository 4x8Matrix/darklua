image: "rust:latest"

cache:
  paths:
    - cargo/

stages:
  - install
  - checks
  - pre-build
  - build
  - test
  - integration-test
  - deploy

variables:
  CARGO_HOME: $CI_PROJECT_DIR/cargo

.only-mr-and-main:
  only:
    - main
    - merge_requests

npm-install-site:
  image: node:16
  stage: install
  extends: .only-mr-and-main
  script:
    - cd site
    - npm install
  cache:
    key: node-modules-cache
    paths:
      - site/node_modules/
    policy: push
  needs: []

npm-install-wasm-tests:
  image: node:16
  stage: install
  extends: .only-mr-and-main
  script:
    - cd site/darklua-wasm/javascript-tests
    - npm install
  cache:
    key: node-modules-tests-cache
    paths:
      - site/darklua-wasm/javascript-tests/node_modules/
    policy: push
  needs: []

install-wasm-pack:
  stage: install
  extends: .only-mr-and-main
  script:
    - cargo install wasm-pack --version 0.9.1 # https://github.com/rustwasm/wasm-pack/issues/823
  cache:
    key: wasm-pack-install
    paths:
      - $CARGO_HOME/bin/wasm-pack
    policy: push
  needs: []

darklua-wasm-build-nodejs:
  stage: pre-build
  extends: .only-mr-and-main
  script:
    - $CARGO_HOME/bin/wasm-pack -V
    - $CARGO_HOME/bin/wasm-pack build site/darklua-wasm -t nodejs
    - mv site/darklua-wasm/pkg site/darklua-wasm/pkg-nodejs
  cache:
    key: wasm-pack-install
    paths:
      - $CARGO_HOME/bin/wasm-pack
    policy: pull
  artifacts:
    expire_in: 1 hour
    paths:
      - site/darklua-wasm/pkg-nodejs
  needs:
    - install-wasm-pack

darklua-wasm-build-release:
  stage: pre-build
  extends: .only-mr-and-main
  script:
    - $CARGO_HOME/bin/wasm-pack -V
    - $CARGO_HOME/bin/wasm-pack build site/darklua-wasm -t bundler --release
  cache:
    key: wasm-pack-install
    paths:
      - $CARGO_HOME/bin/wasm-pack
    policy: pull
  artifacts:
    expire_in: 1 hour
    paths:
      - site/darklua-wasm/pkg
  needs:
    - install-wasm-pack

wasm-javascript-tests:
  image: node:16
  stage: test
  extends: .only-mr-and-main
  script:
    - mv site/darklua-wasm/pkg-nodejs site/darklua-wasm/pkg
    - cd site/darklua-wasm/javascript-tests
    - npm run test
  cache:
    key: node-modules-tests-cache
    paths:
      - site/darklua-wasm/javascript-tests/node_modules/
    policy: pull
  needs:
    - npm-install-wasm-tests
    - darklua-wasm-build-nodejs

style-check:
  stage: checks
  extends: .only-mr-and-main
  script:
    - rustc --version
    - rustup component add rustfmt
    - cargo fmt -- --version
    - cargo fmt -- --check
  needs: []

clippy:
  stage: checks
  extends: .only-mr-and-main
  script:
    - rustc --version
    - rustup component add clippy
    - cargo clippy --version
    - cargo clippy --all-targets --all-features -- -D warnings
  needs: []

style-check-site:
  image: node:16
  stage: checks
  extends: .only-mr-and-main
  script:
    - cd site
    - npm run style-check
  cache:
    key: node-modules-cache
    paths:
      - site/node_modules/
    policy: pull
  needs:
    - npm-install-site

build:
  stage: build
  extends: .only-mr-and-main
  script:
    - rustc --version
    - cargo --version
    - cargo build --verbose
  artifacts:
    expire_in: 7 day
    paths:
      - target/debug/darklua
  needs: []

build-release:
  stage: build
  extends: .only-mr-and-main
  script:
    - rustc --version
    - cargo --version
    - cargo build --release --verbose
  artifacts:
    expire_in: 30 day
    paths:
      - target/release/darklua
  needs:
    - clippy
    - style-check

build-release-windows:
  stage: build
  only:
    - main
  tags:
    - windows
  script:
    - Invoke-WebRequest -URI https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe
    - ./rustup-init.exe -y
    # refresh PATH
    - $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
    - rustc --version
    - cargo --version
    - cargo build --release --verbose
  artifacts:
    expire_in: 30 day
    paths:
      - target/release/darklua.exe
  needs:
    - clippy
    - style-check

build-site:
  image: node:16
  stage: build
  extends: .only-mr-and-main
  script:
    - cd site
    - npx gatsby --version
    - npx gatsby build
  cache:
    key: node-modules-cache
    paths:
      - site/node_modules/
    policy: pull
  artifacts:
    paths:
      - site/public
  needs:
    - npm-install-site
    - darklua-wasm-build-release

pages:
  stage: deploy
  script:
    - mv site/public public
  artifacts:
    paths:
      - public
  only:
    - main
  needs:
    - build-site

test:
  stage: test
  extends: .only-mr-and-main
  script:
    - cargo test --locked --verbose
  needs:
    - build

.lua-setup:
  before_script:
    - apt-get -qq update
    - apt-get -qq install -y python3
    - python3 --version
    - apt-get -qq install -y python3-pip
    - python3 -m pip --version
    - ./scripts/install-lua.sh
    - export PATH=$PATH:$PWD/lua_install/bin

test-lua-projects:
  stage: integration-test
  extends:
    - .only-mr-and-main
    - .lua-setup
  script:
    - lua ./scripts/test-commands.lua
  needs:
    - build-release
